call Minishell: mini.
determine ‘ and “ from beginning to the end (can’t get in them)
determine ‘(‘ and ‘)’ so that we don’t get in them
split by || and && into sub-mini
each sub_mini. will be split by | into mini_units
break input - which part belongs to redirections and not redirections. <(ls) is a redirection, but < (ls) is a wrong syntax.
Friendly reminder: <$(laa) => command not found and ambiguous redirect.
if there is ‘(‘ and  ‘)’ inside mini_units, break that part and it must be considered as command. if there is already command -> syntax error ( because ‘(‘ and ‘)’ also appears in part of redirections already. so there is no other purpose for ‘(‘ and ‘)’
split by whitespaces
expand $ in and out of quotes 
de double quotes.
 expand *
dequo

8 has a very small edge cases that i don’t want to try.
For example, in bash: export ab=\’$mk\’
=> $echo $ab, it’s ‘$mk’

then, when you call your minishell, we will have that variable in the environment. Then, i think it could lead to problems. Anyway, you know, but, our shell is minishell. Anyway, that’s already aceptable good.

1.	Struct of Shell: Mini
2.  ||     (   1  | 2   |  3  &&  4  || 5  | 6  || 7  | 8     && 9 )     ||  

 has 3 sub  Shell. Each subshell has after        
.                                                    sign to indicate what need to do after finished it’s execution
3. sub shell 1 do first part. if wrong -> run sub shell 2
sub shell 2 has 1 mini shell. before and after, we can use redirections to reload in and output. after that, run another mini,

This mini: do 1 and 2 and 3 parallel.
If the exitcode of 3 is wrong true 1.1: do 4.  1.2  If 4 wrong do 5 and 6.   1.3 if 6 wrong do 7 and 8.  1.4 if 8 true do 9.
 bla bla

the mini true, stop, wrong run the last sub Shell
